*{
    box-sizing: border-box;
}

/*HTML SELECTOR*/
html {
    background: #b3b3b3;
    padding: 15px;
    border: 5px solid white;
    margin: 15px;
    height: 2000px;
    overflow:hidden;
}
/*The stacking context is a three-dimensional
conceptualization of HTML elements along IMAGINARY

Z-AXIS RELATIVE to THE USER, who is assumed to be facing the viewport
or the webpage. HTML elements occupy

 this space in priority order based on element attributes.*/
body {
    background: #fa923f;
    padding: 20px;
    border: 5px solid black;
    margin: 0;
    overflow:hidden;
    /*it is also working if we add -----> overflow:auto*/
  }
/*WONT WORK BECAUSE OF CSS DEFAULT BEHAVIOR
If we apply overflow:hidden to the body element,
this will simply passed on the html element.

The consequence of this is that we dont the overflow hidden declaration
in the body element.

It is like we have the CODE BELOW:

html {
    background: #b3b3b3;
    padding: 15px;
    border: 5px solid white;
    margin: 15px;
    height: 2000px;
    overflow:hidden;
}

body {
    background: #fa923f;
    padding: 20px;
    border: 5px solid black;
    margin: 0;
  }


  WE CAN FIX IT DOING THIS

  html {
    background: #b3b3b3;
    padding: 15px;
    border: 5px solid white;
    margin: 15px;
    height: 2000px;
    overflow:hidden;

}

body {
    background: #fa923f;
    padding: 20px;
    border: 5px solid black;
    margin: 0;
    overflow:hidden;
  }
*/
  
.parent {
    background: white;
    padding: 20px;
    border: 5px solid black;
    margin: 0;
    position: relative;
    top:200px;
  }
  
.parent div {
    background: rgb(105, 105, 109);
    color: white;
    padding: 10px;
    border: 5px solid black;
    margin: 10px;
}

/*
STATIC-> DEFAULT VALUE
FIXED-> position in content is the VIEWPORT (or containing block is the viewport)
ABSOLUTE-> position in content is the HTML or the parent element (or containing block is the ...)
RELATIVE->  position in content is the THE ELEMENT ITSELF (
(or containing block is the ancestor, the content of the ancestor is the content itself (
    the closest ancestor MUST BE a block level element NOT INLINE))

STICKY-> the is the viewport and another element for sticky ((or containing block is the ...)
*/

/*Basically the elements they use or behaves
    the same way it did before when we didn't apply that value*

But the cool thing is that if we now go back and add
        for example top let's say 50 pixels and left 50
    pixels that then we can see that the element suddenly
moves and why is this happening ->

because the position in context is the element itself
    and at the same time the element
is also not taken out of the document flow.

It was pushed  from the current position down and left by 50px;

FOR the relative positioning this simply defines
how this element should move from the current position.
*/


/*PROBLEM WITH STATIC AND RELATIVE*/

/*
In addition to that we also had a look at the 100 percent height issue because we saw that if our element

itself and the ancestors both use the position as static or relative value then applying 100 percent

height to our element is not working.

We saw that if we add a height of 100 percent to the ancestors.

This issue is fixed.*/