* {
    box-sizing: border-box;
}

/*font family - a specific font name like "Times new roman"*/
/*generic family - it is a group of font families who looks same like "sherif"*/

body {
    font-family: 'Montserrat', sans-serif;
    margin:0;
    color:grey;
    display:grid;
    grid-template-rows: 3.5rem auto fit-content(8rem);
    /*fit-content  --> */

    /*grid-template-rows: 3.5rem auto auto; -----> DOES NOT WORK --> auto twice distributes */


    /*takes an argument which will be used in case the content is smaller size */
    /*padding-top:3.5rem;*/
    grid-template-areas: "header"
                          "main"
                          "footer";
}
/*3.5 rem is the height of the menu and 8 rem the height of the footer*/
main{
    /*min-height: calc(100vh - 3.5rem - 8rem);*/
    /*margin-top:3.5rem;*/
    grid-row:2/3;
    grid-area:main;
    /*so every main will have 3.5rem nav menu.
    main.html and main->margin-top on shared.css due to margin collapsing we will use 3.5 and not 7rem*/
}
/*The logic VW or VH,
is that it always allow us to refer our sizes to the actual viewport*/

/*There is also Vmin and Vmax check lecture https://www.udemy.com/css-the-complete-guide-incl-flexbox-grid-sass/learn/v4/t/lecture/9540364?start=0*/
.backdrop{
    position:fixed;
    top:0;
    left:0;
    display: none;
    width: 100vw;
    height:100vh;
    z-index:100;
    background:rgba(0,0,0,0.5);
}

.main-header{
    grid-area: header;
    width:100%;
    background: yellow;
    padding: 0.5rem 1rem;
    position:fixed;
    z-index:60;
    top:0;
    left:0;
    display: flex;
    flex-direction: row;
    align-items: center;
    justify-content: space-between;
    grid-row:1/2;

}
/*Since it is a fixed header, It is not part of the document flow and therefore it does not need
a seperate row on the greed*/


/*.main-header > div{*/
    /*display: inline-block;*/
/*}*/



.toggle-button {
    width: 3rem;
    background: transparent;
    border: none;
    cursor: pointer;
    padding-top: 0;
    padding-bottom: 0;
    vertical-align: middle;
}

.toggle-button:focus {
    outline: none;
}

.toggle-button__bar {
    width: 100%;
    height: 0.2rem;
    background: black;
    display: block;
    margin: 0.6rem 0;
}


.main-header__brand{
    color: #0e4f1f;
    text-decoration: none;
    font-weight: bold;
    /* width: 20px; */
    /*vertical-align: middle; REMOVED BECAUSE OF FLEX*/
    /*display: inline-block;  REMOVED BECAUSE OF FLEX */

}

/*descendant SELECTOR*/
.main-header__brand img{
    height:2.5rem;
    vertical-align: middle;
}



.main-header div + .main-nav{
    display: none;
}

.main-nav__items {
    margin: 0;
    padding: 0;
    list-style: none;
    display:flex;
    flex-direction: row;
    justify-content: flex-end;
}

.main-nav__item{
    /*display:inline-block;*/
    margin:0 1em;
    /*list-style: none;*/
}

.main-nav__item a,
.mobile-nav__item a{
    text-decoration:none;
    color: #0e4f1f;
    font-weight: bold;
    padding: 0.2rem 0;
}

.main-nav__item a:hover,
.main-nav__item a:active{
    color:white;
    border-bottom: 5px solid white;
}

/*it has the same specifity with .main-nav__item a SO THE ORDER MATTERS (it is after the .main-nav__item a
 it will overwrite it*/
.main-nav__item--cta a,
.mobile-nav__item--cta a{
    color:white;
    background: #ff1b68;
    padding:0.5rem 1rem;
    border-radius: 8px;
}

.main-nav__item--cta a:hover,
.main-nav__item--cta a:active,
.mobile-nav__item--cta a:hover,
.mobile-nav__item--cta a:active{
    color:#ff1b68;
    background: white;
    border:none;
}
/*-------------------*/

.main-footer{
    /*grid-row:3/4;*/
    grid-area:footer;
    background-color: black;
    /*color:white; -> does not work because anchor tag has default color.*/
    margin-top:3rem;
    padding: 2rem;
}

.main-footer__links{
    list-style:none;
    margin:0;
    padding:0;
    /*text-align: center;*/
    display:flex;
    flex-direction: column;
    align-items: center;

}

.main-footer__link{
    /*display:block;*/
    margin:0.5rem 0;
}

.main-footer__link > a{
    color:white;
    text-decoration: none;
}


.main-footer__link > a:hover,
.main-footer__link > a:active{
    color:#ccc;
}


.mobile-nav {
    display: none;
    position: fixed;
    z-index: 101;
    top: 0;
    left: 0;
    background: white;
    width: 80%;
    height: 100vh;
}

.mobile-nav__items {
    /*width: 90%;*/
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    height: 100%;
    list-style: none;
    margin: 0 auto;
    padding: 0;
    /*text-align: center;*/
}

.mobile-nav__item {
    margin: 1rem 0;
}

.mobile-nav__item a {
    font-size: 1.5rem;
}

/*-------*/

.button{
    background: #0e4f1f;
    color:white;
    font: inherit;
    border: 1.5px solid red;
    padding:8px;
    border-radius:8px;
    font-weight: bold;
    cursor:pointer;
}
/*Button has default assign variables*/
/*inherit forces the inherited styles to be applied (font-size and font-family*/

.button:hover,
.button:active{
    background-color: white;
    color:#0e4f1f;
}

/* PSEUDO
        1)classes allow us to define a style of a special --state-- of an element
            like the hover or the active state
            a) defined with :class name (:hover, :active)

        2)elements allow us to define of a specific --part-- of an element
            b) defined with ::element name (::first-letter, ::first-line, ::after, ::before)

::after and ::before allow to render content through CSS. */
.button:focus{
    outline: none;
}

.button[disabled]{
    cursor:not-allowed;
    border:#a1a1a1;
    background: #ccc;
    color:#a1a1a1;
}

.open{
    display: block !important;
}

@media(min-width:40rem ) {
    .toggle-button{
        display: none;
    }

    .main-header div + .main-nav{
        display: flex;
    }

    .main-footer__link{
        margin:0 1rem;
    }

    .main-footer__links{
        flex-direction: row;
        justify-content: center;
    }
}

